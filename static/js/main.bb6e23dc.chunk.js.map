{"version":3,"sources":["store/options.js","genericComponents/selector/selector.js","genericComponents/if/if.js","store/character.js","store/optionDetails.js","components/options/options.js","genericComponents/poolStat/poolStat.js","components/stats/stats.js","components/app/app.js","store/index.js","index.js"],"names":["initialState","descriptorArray","descriptor_name","typeArray","type_name","focusArray","focus_name","fetchOptions","endpoint","dispatch","fetch","process","then","response","json","data","fetchSuccess","catch","e","console","log","payload","type","Selector","props","key","name","htmlFor","text","onChange","changefunction","selector","changetarget","value","target","getDetails","undefined","id","selected","disabled","default","choices","map","val","ind","render","condition","children","If","React","Children","child","cloneElement","Then","characterName","descriptor","focus","tier","effort","mightPool","mightPoolMax","mightEdge","speedPool","speedPoolMax","speedEdge","intellectPool","intellectPoolMax","intellectEdge","edgeLimit","bonusPool","xp","recovery","action","mins","hour","hours","impaired","debilitated","skills","might","speed","intellect","advancement","poolIncrease","edgeIncrease","effortIncrease","skillIncrease","other","total","abilities","abilityLimit","attacks","weaponTraining","light","medium","heavy","cyphers","cypherList","cypherLimit","cypherCount","equipment","equipmentDescription","armor","money","API","descriptorDetails","typeDetails","focusDetails","fetchDescriptorDetailsSuccess","fetchFocusDetailsSuccess","fetchTypeDetailsSuccess","require","config","connect","state","options","character","reset_me","test_it","get_options","set_name","set_selector","setSelector","get_descriptorDetails","get_typeDetails","get_focusDetails","className","length","PoolStat","stat","auxStat","toLowerCase","optionDetails","useEffect","reducers","combineReducers","JSON","parse","stringify","produce","draftState","mysteryOption","reduce","acc","push","x","extra","edge","split","edge_limit","cypher","starting_items","weapons","store","createStore","composeWithDevTools","applyMiddleware","thunk","Main","root","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.bb6e23dc.chunk.js","sourcesContent":["import produce from 'immer';\nimport thunk from 'redux-thunk';\n\n// require('dotenv').config();\n\nconst API = process.env.REACT_APP_API;\n\nconst initialState = {\n  descriptorArray: [{descriptor_name: \"none1\"}],\n  typeArray:[{type_name:\"none2\"}],\n  focusArray:[{focus_name:\"none3\"}],\n};\n\nexport default (state = JSON.parse(JSON.stringify(initialState)), action) => {\n  let {type, payload } = action;\n  return produce(state, draftState => {\n    switch(type){\n      case \"TEST\":{\n        draftState.mysteryOption = 'i am a banana!';\n        draftState.typeArray[0].type_name = \"no thank you\";\n        break;\n      }\n      case \"RESET\":{\n        draftState = initialState;\n        break;\n      }\n      case \"OPTION_FETCH_SUCCESS\":{\n          draftState.descriptorArray = payload.descriptorArray.reduce((acc,val,ind) => {\n            acc.push(val.descriptor_name);\n            return acc;\n          },[]);\n          draftState.typeArray = payload.typeArray.reduce((acc,val,ind) => {\n            acc.push(val.type_name);\n            return acc;\n          },[]);;\n          draftState.focusArray = payload.focusArray.reduce((acc,val,ind) => {\n            acc.push(val.focus_name);\n            return acc;\n          },[]);;\n        }\n      default:\n        return draftState;\n    }\n  })\n}\n\nexport const fetchOptions = (endpoint) => dispatch => {\n  fetch(`${API}/${endpoint}`)\n    .then( response => \n      response.json())\n    .then(data => {\n      dispatch(fetchSuccess(data));\n    })\n    .catch(e => console.log('fetch error', e));\n}\n\nexport const fetchSuccess = payload => {\n  return {\n    type: \"OPTION_FETCH_SUCCESS\",\n    payload: payload,\n  }\n}\n\nexport const fetchFail = () => {\n  return {\n    type: \"OPTION_FETCH_FAIL\"\n  }\n}\n\nexport const tester = () => {\n  return {\n    type: \"TEST\"\n  }\n}\n\nexport const reset = () => {\n  return {\n    type: \"RESET\"\n  }\n}\n\n","import React from 'react';\n\nconst Selector = props => {\n\n  function setterUpdate(e){\n    let payload = {\n      selector: props.changetarget,\n      value: e.target.value, \n    }\n    console.log('setterupdate', payload);\n    props.changefunction(payload);\n    props.getDetails && props.getDetails(payload.value);\n  }\n\n\n  return (\n    <>\n      <label key={props.name} htmlFor={props.name}>{props.text}</label>\n      <select onChange={props.changefunction ? setterUpdate : undefined} name={`${props.name}1`} id={props.name}>\n        <option selected disabled>{props.default}</option>\n        {props.choices.map((val, ind) => {\n          return <option  key={ind} value={val}>{val}</option>\n        })}\n      </select>\n    </>\n  )\n}\n\nexport default Selector;","import React from 'react';\n\nconst render = (condition = false, children = null) => {\n  return condition ? children : null;\n}\n\nexport const If = props =>\n  React.Children.map(props.children, child =>\n    React.cloneElement(child, { condition: props.condition })\n  );\n\nexport const Then = props => render(props.condition, props.children);\nexport const Else = props => render(!props.condition, props.children);\n\nexport const When = props => render(props.condition, props.children);\nexport const Unless = props => render(!props.condition, props.children);","import produce from 'immer';\nimport thunk from 'redux-thunk';\n\nconst API = process.env.REACT_APP_API;\n\nconst initialState ={\n  characterName: \"nameless\",\n  descriptor: \"desc\",\n  type: \"typ\",\n  focus: \"foc\",\n  tier: \"tierish\",\n  effort: \"eff\",\n  mightPool: \"mCur\",\n  mightPoolMax: \"mMax\",\n  mightEdge: \"mEdge\",\n  speedPool: \"sCur\",\n  speedPoolMax: \"sMax\",\n  speedEdge: \"sEdge\",\n  intellectPool: \"iCur\",\n  intellectPoolMax: \"iMax\",\n  intellectEdge: \"iEdge\",\n  edgeLimit: \"eLim\",\n  bonusPool: \"bnsPool\",\n  xp:\"xp#\",\n  recovery:{\n    action:1, \n    mins:1, \n    hour:1, \n    hours:1\n    },\n  impaired: false,\n  debilitated: false,\n  skills:{\n    //name, pool, t/s/i\n    might:[],\n    speed:[],\n    intellect:[]\n    },\n  advancement:{\n    poolIncrease:false,\n    edgeIncrease:false,\n    effortIncrease:false,\n    skillIncrease:false,\n    other:false,\n    total: 0,\n    },\n  abilities:[],\n  abilityLimit:\"abLim\",\n  attacks:[],\n  weaponTraining:{\n    light: null,\n    medium: null,\n    heavy: null\n  },\n  cyphers:{\n    cypherList:[],\n    cypherLimit: \"null\",\n    cypherCount: 0,\n  },\n  equipment:[],\n  equipmentDescription:\"eqDesc\",\n  armor: \"null\",\n  money: \"null\"\n}\n\nexport default (state = JSON.parse(JSON.stringify(initialState)), action) => {\n  let {type, payload } = action;\n  return produce(state, draftState => {\n    switch(type){\n      case \"SET NAME\":{\n        draftState.characterName = payload;\n        break;\n      }\n      case \"SET SELECTOR\": {\n        draftState[payload.selector] = payload.value;\n        break;\n      }\n      case \"SET TYPE DETAILS\":{\n        \n        draftState.mightPoolMax = payload.might;\n        draftState.speedPoolMax = payload.speed;\n        draftState.intellectPoolMax = payload.intellect;\n        draftState.effort = payload.effort;\n        draftState.bonusPool = payload.extra;\n        [draftState.mightEdge,\n          draftState.speedEdge,\n          draftState.intellectEdge] = payload.edge.split(\"/\");\n          draftState.edgeLimit = payload.edge_limit;\n        draftState.cyphers.cypherLimit = payload.cypher;\n        draftState.abilityLimit = payload.abilities;\n        draftState.equipmentDescription = payload.starting_items;\n        [draftState.weaponTraining.light,\n          draftState.weaponTraining.medium,\n          draftState.weaponTraining.heavy] = payload.weapons.split('/').reduce((acc,val) => {\n                                                  acc.push(val !== 'x' ? true : false);\n                                                  return acc;},[]);\n        \n      }\n      default:\n        return draftState;\n    }\n  })\n}\n\nexport const setName = (payload) => {\n  return {\n    type: \"SET NAME\",\n    payload: payload\n  }\n}\n\nexport const setSelector = (payload) => {\n  return {\n    type: \"SET SELECTOR\",\n    payload: payload,\n  }\n}\n","import produce from 'immer';\nimport thunk from 'redux-thunk';\n\nconst API = process.env.REACT_APP_API;\nconst DESCRIPTOR_ENDPOINT = process.env.REACT_APP_DESCRIPTOR_ENDPOINT;\nconst FOCUS_ENDPOINT = process.env.REACT_APP_FOCUS_ENDPOINT;\nconst TYPE_ENDPOINT = process.env.REACT_APP_TYPE_ENDPOINT;\n\n\n\nconst initialState = {\n  descriptorDetails:[],\n  typeDetails:{},\n  focusDetails:[]\n};\n\nexport default (state = JSON.parse(JSON.stringify(initialState)), action) => {\n  let {type, payload } = action;\n  return produce(state, draftState => {\n    switch(type){\n      case \"SET DESCRIPTOR DETAILS\":{\n        console.log('in desc', payload);\n        draftState.descriptorDetails = payload;\n        break;\n      }\n      case \"SET FOCUS DETAILS\":{\n        console.log(payload);\n        draftState.focusDetails = payload;\n        break;\n      }\n      case \"SET TYPE DETAILS\":{\n        console.log(payload);\n        for(let x in payload){\n          console.log('x',x, payload[x]);\n          draftState.typeDetails[x] = payload[x];\n        }\n        break;\n      }\n      default:\n        return draftState;\n    }\n  })\n}\n\n\nexport const fetchDescriptorDetails = (descriptor) => dispatch => {\n  console.log('hrm', `${API}/${DESCRIPTOR_ENDPOINT}/${descriptor}`);\n  fetch(`${API}/${DESCRIPTOR_ENDPOINT}/${descriptor}`)\n    .then( response => {\n      // console.log(response.json());\n      return response.json();\n    })\n    .then( data => {\n      dispatch(fetchDescriptorDetailsSuccess(data));\n    })\n    .catch( e => console.log('descriptor fetch error', e));\n}\n\nexport const fetchDescriptorDetailsSuccess = payload => {\n  return {\n    type: \"SET DESCRIPTOR DETAILS\",\n    payload: payload,\n  }\n}\n\nexport const fetchFocusDetails = (focus) => dispatch => {\n  fetch(`${API}/${FOCUS_ENDPOINT}/${focus}`)\n    .then( response => {\n      return response.json();\n    })\n    .then( data => {\n      dispatch(fetchFocusDetailsSuccess(data));\n    })\n    .catch( e => console.log('focus fetch error', e));\n}\n\nexport const fetchFocusDetailsSuccess = payload => {\n  return {\n    type: \"SET FOCUS DETAILS\",\n    payload: payload,\n  }\n}\n\nexport const fetchTypeDetails = (type) => dispatch => {\n  fetch(`${API}/${TYPE_ENDPOINT}/${type}`)\n    .then( response => {\n      return response.json();\n    })\n    .then( data => {\n      dispatch(fetchTypeDetailsSuccess(data[0]));\n    })\n    .catch( e => console.log('type fetch error', e));\n}\n\nexport const fetchTypeDetailsSuccess = payload => {\n  return {\n    type: \"SET TYPE DETAILS\",\n    payload: payload,\n  }\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport Selector from '../../genericComponents/selector/selector.js';\nimport { If, Then } from '../../genericComponents/if/if.js';\n\n\n\n//store\nimport { tester, reset, fetchOptions  } from '../../store/options.js';\nimport { setName, setSelector } from '../../store/character.js';\nimport { fetchDescriptorDetails,fetchTypeDetails,fetchFocusDetails } from '../../store/optionDetails.js';\n// import { fetchTypeDetails } from '../../store/typeDetails.js';\n// import { fetchFocusDetails } from '../../store/focusDetails.js';\n\nrequire('dotenv').config();\nconst OPTIONS_ENDPOINT = process.env.REACT_APP_OPTIONS_ENDPOINT;\n\nconst Options = props => {\n\n  function nameUpdate(e){\n    props.set_name(e.target.value);\n  }\n\n\n\n  return (\n    <div id=\"options\" className=\"basicsComplete options bound pri-bound\">\n      <input type=\"text\" id=\"name\" onChange={nameUpdate}></input>\n      <br/>\n      <If condition={props.options.descriptorArray?.length > 1}>\n      {/* <If condition={props.descriptors?.length > 1} > */}\n        <Then>\n          {/* <Selector choices={props.descriptors} name={\"descriptor\"} text={\"I am a \"}/> */}\n           <Selector choices={props.options?.descriptorArray} default={\"Adjective\"} name={\"descriptor\"} text={\"I am a \"} changefunction={props.set_selector} changetarget={\"descriptor\"} getDetails={props.get_descriptorDetails}/>\n           <Selector choices={props.options?.typeArray} default={\"Noun\"} name={\"type\"} text={\", \"} changefunction={props.set_selector} changetarget={\"type\"} getDetails={props.get_typeDetails}/>\n           <Selector choices={props.options?.focusArray} default={\"Verbs\"} name={\"focus\"} text={\" that \"} changefunction={props.set_selector} changetarget={\"focus\"} getDetails={props.get_focusDetails}/>\n        </Then>\n      </If>\n      \n    </div>\n  )\n}\n\n\n\n\n\n\nconst mapStateToProps = state => ({\n  options: state.options,\n  character: state.character,\n  descriptorDetails: state.descriptorDetails,\n  typeDetails: state.typeDetails,\n  focusDetails: state.focusDetails,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset_me: () => dispatch(reset()),\n  test_it: () => dispatch(tester()),\n  get_options: (endpoint) => dispatch(fetchOptions(endpoint)),\n  set_name:(name) => dispatch(setName(name)),\n  set_selector: (payload) => dispatch(setSelector(payload)),\n  get_descriptorDetails: (payload) => dispatch(fetchDescriptorDetails(payload)),\n  get_typeDetails: (payload) => dispatch(fetchTypeDetails(payload)),\n  get_focusDetails: (payload) => dispatch(fetchFocusDetails(payload)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options)","import React from 'react';\nimport {If, Then} from \"../if/if.js\";\n\n\nconst PoolStat = props => {\n\n  console.log('char',`${props.stat}Edge`);\n\n  return(\n    <section className=\"layout border mainSize\">\n      <section className=\"border auxStat statBottomBox\">\n        <div className=\"border midline\">{props.character[`${props.auxStat.toLowerCase()}`]}</div>\n        <article className=\"border label\">{props.auxStat}</article>\n      </section>\n      <section className=\"border midSection statBottomBox center\">\n        <article className=\"border fit midline\">+</article>\n        <article className=\"border fit midline\">{props.character[`${props.stat.toLowerCase()}PoolMax`]}</article>\n        <article className=\"border fit midline\">-</article>\n        <article className=\"border label\">{props.stat}</article>\n      </section>\n        \n      <section className=\"border bottomSection\">\n        <article className=\"border statBottomBox center\">\n          <div className=\"border midline\">{props.character[`${props.stat.toLowerCase()}Pool`]}</div>\n          <div className=\"border label\">POOL</div>\n        </article>\n        <article className=\"border statBottomBox center\">\n          <If condition={props.character[`${props.stat.toLowerCase()}Edge`] === '?'}>\n            <Then >\n              <div className=\"border midline\">+</div>\n            </ Then>\n          </If>\n\n          <div className=\"border midline\">{props.character[`${props.stat.toLowerCase()}Edge`]}</div>\n          \n          <If condition={props.character[`${props.stat.toLowerCase()}Edge`] === '?'}>\n            <Then >\n              <div className=\"border midline\">-</div>\n            </ Then>\n          </If>\n          \n          <div className=\"border label\">EDGE</div>\n        </article>\n      </section>\n    </section>\n  )\n}\n\nexport default PoolStat;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { If, Then } from '../../genericComponents/if/if.js';\nimport PoolStat from '../../genericComponents/poolStat/poolStat.js';\n\n\nconst Stats = props => {\n\n\n  return(\n    <div className=\"basicsComplete stats bound\">\n      <PoolStat character={props.character} stat=\"MIGHT\" auxStat=\"TIER\"/>\n      <PoolStat character={props.character} stat=\"SPEED\" auxStat=\"EFFORT\"/>\n      <PoolStat character={props.character} stat=\"INTELLECT\" auxStat=\"XP\"/>\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => ({\n  character: state.character,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Stats)","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { tester, reset, fetchOptions } from '../../store/options.js';\nimport Option from '../options/options.js';\nimport optionDetails from '../../store/optionDetails.js';\nimport Stats from '../stats/stats.js';\n\nconst OPTIONS_ENDPOINT = process.env.REACT_APP_OPTIONS_ENDPOINT;\n\n\nconst App = props => {\n\n  useEffect(() => {\n    props.get_options(OPTIONS_ENDPOINT);\n    // forceUpdate();\n    },[]);\n\n  return (\n    <div id=\"App\">\n      {/* Hello fucking WORLD! */}\n      {/* <button onClick={() => props.test_it()}>I LIVE!</button>\n      <button onClick={() => props.reset_me()}>I DIE!</button> */}\n      <Option />\n      {/* <div className=\"stats bound\">stats</div> */}\n      <Stats />\n      <div className=\"status bound\">\n        <div className=\"recovery bound\">recovery</div>\n        <div className=\"damageTrack bound\">damageTrack</div>\n      </div>\n      \n      <div className=\"skills bound\">skills</div>\n      <div className=\"advancement bound\">advancement</div>\n      <div className=\"abilities bound\">abilities</div>\n      {/* <div className=\"portrait bound\">portrait</div> */}\n      <div className=\"attacks bound\">attacks</div>\n      <div className=\"marquee bound\">marquee</div>\n      <div className=\"cyphers bound\">cyphers</div>\n      <div className=\"equipment bound\">equipment</div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  options: state.options,\n  optionDetails: state.optionDetails,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset_me: () => dispatch(reset()),\n  test_it: () => dispatch(tester()),\n  get_options: (endpoint) => dispatch(fetchOptions(endpoint)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\n//import states\nimport options from './options.js';\nimport character from './character.js';\nimport optionDetails from './optionDetails.js';\n// import focusDetails from './focusDetails.js';\n// import typeDetails from './typeDetails.js';\n\n\nlet reducers = combineReducers({ options, optionDetails, character });\n\nconst store = () => {\n  return createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n}\n\nexport default store();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter} from 'react-router-dom';\nimport App from './components/app/app.js';\nimport store from './store';\nimport './style/base.scss';\n\nfunction Main() {\n  return(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  )\n}\n\nconst root = document.getElementById('root');\nReactDOM.render(<Main />, root);"],"sourceRoot":""}